<?php
// Copyright (c) 2011 KontextWork
// Author: Eugen Mayer

function hosting_folders_menu() {
  return array(
    'admin/hosting/site_folders' => array(
       'type' => MENU_NORMAL_ITEM,
       'title' => 'Site folders',
       'description' => 'Configure extra site folders',
       'page callback' => 'drupal_get_form',
       'page arguments' => array('hosting_folders_admin_settings'),
       'access arguments' => array('administer site configuration'),
       'file' => 'hosting_folders.admin.inc'
    ),
  );
}
/**
* Implementation of hook_form_alter()
*/
function hosting_folders_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'site_node_form') {
    $form['folders_fs'] = array(
      '#type' => 'fieldset',
      '#title' => t('Folders'),
      '#collapsed' => TRUE,
      '#collapsible' => TRUE,
    );
    $form['folders_fs']['folders'] = array(
      '#type' => 'textarea',
      '#title' => t('Extra folders'),
      '#description' => t('Which folders should be created in the site/this/files folder with webserver write permissions. Please enter each folder on one line, paths are relative to files/'),
      '#default_value' => $form['#node']->folders ? $form['#node']->folders : variable_get('hosting_folders_default',''),
      '#required' => FALSE,
      '#weight' => 0,
      '#validate' => '_hosting_folders_validate',
    );
    return $form;
  }
}

function _hosting_folders_validate($element, $form_state) {#
  // TODO: do some clever regexp here to validate a unix filepath
  $folders= _hosting_folders_textarea_to_array($element['#value']);
  foreach($folders as $f) {
    if(!_hosting_folders_validate_folder($f)) {
      form_set_error($element['#name'],"The folder you entered is not valid ($f)");
      return;
    }
  }
}

function _hosting_folders_validate_folder($folder) {
  // TODO: add some nice regexp
  return TRUE;
}

function _hosting_folders_site_folders($site_url, $prefix = '') {
  // We are not looking in the node revisions table, we simply only support the most recent
  // revision only, soe node table
  // TODO: use dbtng here .. if it ever will be available with aegir default
  $result = db_select("SELECT hosting_folders from {node} AS n LEFT JOIN {hosting_folders} AS f ON n.vid=f.vid WHERE n.title='%s' LIMIT 1",$site_url);
  $folders = db_result($result);
  return _hosting_folders_textarea_to_array($folders, $prefix, '_hosting_folders_validate_folder');
}

function _hosting_folders_textarea_to_array($text, $prefix ='', $validate_c = NULL) {
  $out = array();
  if ($text != '') {
    $lines = array();
    $lines = preg_split("/((\r(?!\n))|((?<!\r)\n)|(\r\n))/", $text);
    foreach ($lines as $l) {
      //TODO: Due to drupal filter on output policy we should validate here
      if($validate_c != NULL && function_exists($validate_c) && $validate_c($l)) {
        $out[] = "{$prefix}$l";
      }
    }
  }
  return $out;
}

/** 
* Implementation of hook_insert()
*/
function hosting_folders_insert($node) {
  if ($node->folders) {
    db_query("INSERT INTO {hosting_folders} (vid, nid, folders) VALUES (%d, %d, '%s')", $node->vid, $node->nid, $node->folders);
  }
}
/**
* Implementation of hook_update()
*/
function hosting_folders_update($node) {
  db_query("UPDATE {hosting_folders} SET folders = '%s' WHERE nid = %d", $node->folders, $node->nid);
}
/**
* Implementation of hook_delete()
*/
function hosting_folders_delete($node) {
  db_query("DELETE FROM {hosting_folders} WHERE nid=%d", $node->nid);
}
/**
* Implementation of hook_delete_revision()
*/
function hosting_folders_delete_revision($node) {
  db_query("DELETE FROM {hosting_folders} WHERE vid=%d", $node->vid);
}
/** 
* Implementation of hook_nodeapi()
*/
function hosting_folders_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'site') {
    switch ($op) {
    case 'insert':
        hosting_folders_insert($node);
        break;
      case 'update':
        hosting_folders_update($node);
        break;
      case 'delete' :
        hosting_folders_delete($node);
        break;
      case 'delete revision':
        hosting_folders_delete_revision($node);
        break;
      case 'load':
        $additions['folders'] = db_result(db_query("SELECT folders FROM {hosting_folders} WHERE vid=%d", $node->vid));
        return $additions;
        break;
    }
  }
}
